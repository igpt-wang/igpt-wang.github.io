<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>stable diffusion在线部署</title>
    <link href="/2023/07/23/stable%20diffusion%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/07/23/stable%20diffusion%E5%9C%A8%E7%BA%BF%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="AIGC之-AI-绘画"><a href="#AIGC之-AI-绘画" class="headerlink" title="AIGC之 AI 绘画"></a>AIGC之 AI 绘画</h1><p>随着人工智能技术的发展与完善，AI Generated Content (AIGC，人工智能自动生成内容) 在内容的创作上为人们的工作和生活带来前所未有的帮助，具体表现在能够帮助人类提高内容生产的效率，丰富内容生产的多样性、提供更加动态且可交互的内容。<br>AIGC 相关技术可以在创意、表现力、迭代、传播、个性化等方面，充分发挥技术优势，打造新的数字内容生成与交互形态。在这两年AIGC在AI作画、AI 作曲、AI 作诗、AI写作、AI视频生成、 AI语音合成等领域持续大放异彩；尤其是近段时间火遍全网的AI绘画，作为用户的我们只要简单输入几个关键词几秒钟之内一幅画作就能诞生。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909576071-2ce18ee1-43f2-44d1-8b08-7cd44d2f16a6.webp#averageHue=%235a705b&clientId=ue03c9e5c-081e-4&from=paste&id=u158b5dea&originHeight=768&originWidth=3072&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u1128f118-f41e-4825-97c6-bdb43cc86d6&title="><br>    AI 绘画为产业界带来了巨大的生产力提升：文本生成图像（AI 绘画）是根据文本生成图像的的新型生产方式，相比于人类创作者，文本生成图像展现出了创作成本低、速度快且易于批量化生产的优势。<br>近期各个大厂的AI绘画产品也相继出炉，而对于个人使用者和喜欢尝鲜的开发者而言，最值得体验的两款AI绘画产品莫过于 Midjourney 和 Stable Diffusion；Midjourney 是一款商业AI绘画工具，借助于 Discord 服务平台快速普及，受到众多用户的追捧和喜爱；而 Stable Diffusion 则选择了走开源之路，并且在一些方面的出图潜力和Midjourney相比不相伯仲，受到广大开源爱好者的青睐。<br>目前，stable-diffusion-webui 成为GitHub上最为火热的一个 Stable Diffusion 部署代码，只要有一个带显卡（显存越大出图越快）的主机或者服务器就能完美运行这个代码，并且可以根据自己的喜好来组合各种有趣的视觉模型。<br>但是对于更多的个人用户而言，一个带显卡的服务器电脑成为阻碍他们部署个人 Stable Diffusion 的一大瓶颈，我们普通的创业者和开发者，有没有机会去训练和部署我们所看好领域的AIGC模型呢，答案是肯定的，在当下这个云服务时代，人人都有机会成为前沿的技术探索者。 最近受亚马逊云科技邀请在 Amazon SageMaker 平台进行技术实践，之前也一直苦于缺少合适的GPU服务器而难以快速部署属于自己的 Stable Diffusion这一困扰在遇到 Amazon SageMaker 之后烟消云散。</p><h1 id="20分钟搞定-Stable-Diffusion-模型在线服务部署"><a href="#20分钟搞定-Stable-Diffusion-模型在线服务部署" class="headerlink" title="20分钟搞定 Stable Diffusion 模型在线服务部署"></a>20分钟搞定 Stable Diffusion 模型在线服务部署</h1><h2 id="认识-Amazon-SageMaker"><a href="#认识-Amazon-SageMaker" class="headerlink" title="认识 Amazon SageMaker"></a>认识 Amazon SageMaker</h2><p>Amazon SageMaker 是一项完全托管的机器学习服务：借助SageMaker的多种功能，数据科学家和开发人员可以快速轻松地构建和训练机器学习模型，然后直接部署至生产环境就绪的托管环境。SageMaker涵盖了ML 的整个工作流，可以标记和准备数据、选择算法、训练模型、调整和优化模型以便部署、预测和执行操作。<br>经过过去一周多的学习和实践体验，我发现这个平台简直就是为我们这些创业者和个人开发者量身打造的AI服务落地利器。许多AI工程项目，我们只需去构造好自己的训练集和测试集，其余的模型训练、推理、部署，Amazon SageMaker 都能够帮我们轻松完成。<br><strong>本次博文所分享的 Stable Diffusion 2.0，通过参考官方提供的技术文档，只用了 20分钟左右的时间，我就在Amazon SageMaker 上成功搭建了一套流畅的AI绘画在线服务，接下来，让我们一起揭秘。</strong></p><h2 id="借助-Amazon-SageMaker-进行环境搭建和模型推理"><a href="#借助-Amazon-SageMaker-进行环境搭建和模型推理" class="headerlink" title="借助 Amazon SageMaker 进行环境搭建和模型推理"></a>借助 Amazon SageMaker 进行环境搭建和模型推理</h2><h3 id="1-创建-jupyter-notebook-运行环境"><a href="#1-创建-jupyter-notebook-运行环境" class="headerlink" title="1. 创建 jupyter notebook 运行环境"></a>1. 创建 jupyter notebook 运行环境</h3><ul><li>点击链接登录至亚马逊云科技管理控制台</li></ul><p>在搜索框中搜索 SageMaker ，如下图所示<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909576196-67aec26c-30a2-410f-a903-177864fc0a5b.webp#averageHue=%232d3847&clientId=ue03c9e5c-081e-4&from=paste&id=u0af24949&originHeight=712&originWidth=1724&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u2fb60493-0c1e-4c8e-9f07-dbd53468201&title="><br>这里我们创建一个笔记本编程实例<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909576789-fce5ce47-32bf-48e1-9483-b9845be75345.webp#averageHue=%23f6f5f4&clientId=ue03c9e5c-081e-4&from=paste&id=u7a350260&originHeight=1274&originWidth=1862&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ua85fb8b4-1c1b-45fd-a750-bf6df4a5b4a&title="><br>我这里选择的配置如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909575842-fba782c5-bebe-4282-9819-c91ea881976f.webp#averageHue=%23f7f5f5&clientId=ue03c9e5c-081e-4&from=paste&id=u350f3f77&originHeight=1752&originWidth=1642&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u90d9fb25-e0a9-44b0-8ec8-01b8cbecbad&title="><br>选择角色，其他的默认即可<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909576239-7af019c2-03b5-41ca-ac43-88d6541890b0.webp#averageHue=%23f8f6f5&clientId=ue03c9e5c-081e-4&from=paste&id=u3b3d47c0&originHeight=1398&originWidth=1662&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u5088b4e3-fdfd-46a1-bbc3-8aeabaa11ca&title="><br>大概5分钟左右，实例就创建成功啦<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909577430-9c62760c-1b96-47b0-876b-868503d85c62.webp#averageHue=%23f6f4f2&clientId=ue03c9e5c-081e-4&from=paste&id=u961c8d7a&originHeight=692&originWidth=1764&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=uc04775db-0bee-403a-bdd3-25968581bf3&title="></p><ul><li>点击链接，下载代码</li></ul><p>上传刚刚下载的代码<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909578593-9bda5737-88b1-47d1-92c6-018c80f761d3.webp#averageHue=%235a5959&clientId=ue03c9e5c-081e-4&from=paste&id=u14658523&originHeight=1418&originWidth=2314&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u9c407db3-3c54-40be-b9ff-37f167614d8&title="><br>直接打开这个代码<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909578939-3c61dbeb-caa0-471f-adf7-f8a1f4393fba.webp#averageHue=%23f8f6f6&clientId=ue03c9e5c-081e-4&from=paste&id=u4b21f80d&originHeight=492&originWidth=1950&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u0094f1c7-34e5-4091-a115-59b54357f6d&title="><br>选择合适的conda环境<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909579000-ba19e4ff-e424-4f6e-91a4-2399361228be.webp#averageHue=%23a9a6a5&clientId=ue03c9e5c-081e-4&from=paste&id=u11a18321&originHeight=546&originWidth=2030&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u10f75175-f8eb-4adf-bc36-3506f195717&title="></p><h3 id="2-一键运行所有代码"><a href="#2-一键运行所有代码" class="headerlink" title="2. 一键运行所有代码"></a>2. 一键运行所有代码</h3><p>这里我们直接一键运行运行所有代码即可，代码执行过程中会依次完成 Stable Diffusion 模型相关类和函数的代码定义、推理测试，并打包代码和模型，然后部署模型至Sagemaker 推理终端节点 （PS：这里的所有代码运行完毕大概需要5到10分钟左右）<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909580533-65e9b5eb-d4c3-4fd7-8467-350a11956a04.webp#averageHue=%23f1efef&clientId=ue03c9e5c-081e-4&from=paste&id=u689d1474&originHeight=906&originWidth=1914&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ud34b344b-5770-47d7-ab3f-7fd0b7e1dae&title="></p><h2 id="关键代码分析如下"><a href="#关键代码分析如下" class="headerlink" title="关键代码分析如下"></a>关键代码分析如下</h2><h3 id="1-环境准备，代码模型下载"><a href="#1-环境准备，代码模型下载" class="headerlink" title="1. 环境准备，代码模型下载"></a>1. 环境准备，代码模型下载</h3><p>检查当前 pyTorch 版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">!nvcc --version<br>!pip list | grep torch<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>安装 Stable Diffusion 代码运行额外需要的依赖库，这网速飞快</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">!sudo yum -y install pigz<br>!pip install -U pip<br>!pip install -U transformers==4.26.1 diffusers==0.13.1 ftfy accelerate<br>!pip install -U torch==1.13.1+cu117 -f https://download.pytorch.org/whl/torch_stable.html<br>!pip install -U sagemaker<br>!pip list | grep torch<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>下载代码和模型文件，这里直接下载Hugging Face提供的代码和模型即可<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909580943-fdb77ce8-f844-4b7b-8d58-f4a19fc52466.webp#averageHue=%23f3f0ef&clientId=ue03c9e5c-081e-4&from=paste&id=ub7406181&originHeight=1218&originWidth=1742&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ufe0b8e82-fc0b-4128-becf-cc3fbd4e888&title="></p><h3 id="2-在Notebook中配置并使用模型"><a href="#2-在Notebook中配置并使用模型" class="headerlink" title="2. 在Notebook中配置并使用模型"></a>2. 在Notebook中配置并使用模型</h3><p>直接调用 函数进行模型加载</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> StableDiffusionPipeline<br><span class="hljs-comment"># Load stable diffusion</span><br>pipe = StableDiffusionPipeline.from_pretrained(SD_MODEL, torch_dtype=torch.float16)<br></code></pre></td></tr></table></figure><p>Python<br>Copy<br>在 Cuda 上进行模型的推理，这里 Stable Diffusion V2 能够支持生成的最大图像尺寸为 768 * 768</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># move Model to the GPU</span><br>torch.cuda.empty_cache()<br>pipe = pipe.to(<span class="hljs-string">&quot;cuda&quot;</span>)<br><br><span class="hljs-comment"># V1 Max-H:512,Max-W:512</span><br><span class="hljs-comment"># V2 Max-H:768,Max-W:768</span><br><br><span class="hljs-built_in">print</span>(datetime.datetime.now())<br>prompts =[<br>    <span class="hljs-string">&quot;Eiffel tower landing on the Mars&quot;</span>,<br>    <span class="hljs-string">&quot;a photograph of an astronaut riding a horse,van Gogh style&quot;</span>,<br>]<br>generated_images = pipe(<br>    prompt=prompts,<br>    height=512,<br>    width=512,<br>    num_images_per_prompt=1<br>).images  <span class="hljs-comment"># image here is in [PIL format](https://pillow.readthedocs.io/en/stable/)</span><br><br><span class="hljs-built_in">print</span>(f<span class="hljs-string">&quot;Prompts: &#123;prompts&#125;\n&quot;</span>)<br><span class="hljs-built_in">print</span>(datetime.datetime.now())<br><br><span class="hljs-keyword">for</span> image <span class="hljs-keyword">in</span> generated_images:<br>    display(image)<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>友情提示 ：如果报错，遇到推理时 GPU 内存不够，则可以尝试以下三种方式进行解决</p><ol><li>试一试生成分辨率小一点的图片</li><li>减少生成图片的数量</li><li>升级机型，选择更强的GPU服务器</li></ol><h3 id="3-部署模型至Sagemaker-推理终端节点"><a href="#3-部署模型至Sagemaker-推理终端节点" class="headerlink" title="3. 部署模型至Sagemaker 推理终端节点"></a>3. 部署模型至Sagemaker 推理终端节点</h3><p>我们这里直接使用 AWS 的 SageMaker Python 开发工具包部署模型刚刚已经验证能够运行成功的模型和打包好的代码。</p><ul><li>编写初始化的Sagemaker代码用于部署推理终端节点</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sagemaker<br><span class="hljs-keyword">import</span> boto3<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"># 创建 Session</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>sess = sagemaker.Session()<br><span class="hljs-comment"># sagemaker session bucket -&gt; used for uploading data, models and logs</span><br><span class="hljs-comment"># sagemaker will automatically create this bucket if it not exists</span><br>sagemaker_session_bucket=<span class="hljs-literal">None</span><br><br><span class="hljs-keyword">if</span> sagemaker_session_bucket <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">and</span> sess <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>    <span class="hljs-comment"># set to default bucket if a bucket name is not given</span><br>    sagemaker_session_bucket = sess.default_bucket()<br><br><span class="hljs-keyword">try</span>:<br>    role = sagemaker.get_execution_role()<br><span class="hljs-keyword">except</span> ValueError:<br>    iam = boto3.client(<span class="hljs-string">&#x27;iam&#x27;</span>)<br>    role = iam.get_role(RoleName=<span class="hljs-string">&#x27;sagemaker_execution_role&#x27;</span>)[<span class="hljs-string">&#x27;Role&#x27;</span>][<span class="hljs-string">&#x27;Arn&#x27;</span>]<br><br>sess = sagemaker.Session(default_bucket=sagemaker_session_bucket)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;sagemaker role arn: <span class="hljs-subst">&#123;role&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;sagemaker bucket: <span class="hljs-subst">&#123;sess.default_bucket()&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;sagemaker session region: <span class="hljs-subst">&#123;sess.boto_region_name&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>Python<br>Copy</p><ul><li>创建 inference.py 脚本，进行模型的加载和推理</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python">%%writefile ./$SD_MODEL/code/inference.py<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> torch<br><span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> BytesIO<br><span class="hljs-keyword">from</span> diffusers <span class="hljs-keyword">import</span> StableDiffusionPipeline<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"># 加载模型到CUDA</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">model_fn</span>(<span class="hljs-params">model_dir</span>):<br>    <span class="hljs-comment"># Load stable diffusion and move it to the GPU</span><br>    pipe = StableDiffusionPipeline.from_pretrained(model_dir, torch_dtype=torch.float16)<br>    pipe = pipe.to(<span class="hljs-string">&quot;cuda&quot;</span>)<br><br>    <span class="hljs-keyword">return</span> pipe<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string"># 推理方法</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">predict_fn</span>(<span class="hljs-params">data, pipe</span>):<br><br>    <span class="hljs-comment"># 解析参数 get prompt &amp; parameters</span><br>    prompt = data.pop(<span class="hljs-string">&quot;prompt&quot;</span>, <span class="hljs-string">&quot;&quot;</span>)<br>    <span class="hljs-comment"># set valid HP for stable diffusion</span><br>    height = data.pop(<span class="hljs-string">&quot;height&quot;</span>, <span class="hljs-number">512</span>)<br>    width = data.pop(<span class="hljs-string">&quot;width&quot;</span>, <span class="hljs-number">512</span>)<br>    num_inference_steps = data.pop(<span class="hljs-string">&quot;num_inference_steps&quot;</span>, <span class="hljs-number">50</span>)<br>    guidance_scale = data.pop(<span class="hljs-string">&quot;guidance_scale&quot;</span>, <span class="hljs-number">7.5</span>)<br>    num_images_per_prompt = data.pop(<span class="hljs-string">&quot;num_images_per_prompt&quot;</span>, <span class="hljs-number">1</span>)<br>    <span class="hljs-comment"># 传入参数，调用推理 run generation with parameters</span><br>    generated_images = pipe(<br>        prompt=prompt,<br>        height=height,<br>        width=width,<br>        num_inference_steps=num_inference_steps,<br>        guidance_scale=guidance_scale,<br>        num_images_per_prompt=num_images_per_prompt,<br>    )[<span class="hljs-string">&quot;images&quot;</span>]<br><br>    <span class="hljs-comment"># create response</span><br>    encoded_images = []<br>    <span class="hljs-keyword">for</span> image <span class="hljs-keyword">in</span> generated_images:<br>        buffered = BytesIO()<br>        image.save(buffered, <span class="hljs-built_in">format</span>=<span class="hljs-string">&quot;JPEG&quot;</span>)<br>        encoded_images.append(base64.b64encode(buffered.getvalue()).decode())<br><br>    <span class="hljs-comment"># create response</span><br>    <span class="hljs-keyword">return</span> &#123;<span class="hljs-string">&quot;generated_images&quot;</span>: encoded_images&#125;<br></code></pre></td></tr></table></figure><p>Python<br>Copy</p><h2 id="在-Amazon-Cloud9-创建前后端-Web-应用"><a href="#在-Amazon-Cloud9-创建前后端-Web-应用" class="headerlink" title="在 Amazon Cloud9 创建前后端 Web 应用"></a>在 Amazon Cloud9 创建前后端 Web 应用</h2><p><strong>AWS Cloud9 是一种基于云的集成开发环境 (IDE)，只需要一个浏览器，即可编写、运行和调试代码。包括一个代码编辑器、调试程序和终端，并且预封装了适用于 JavaScript、Python、PHP 等常见编程语言的基本工具，无需安装文件或配置开发计算机，即可开始新的项目。</strong></p><ul><li>这里我直接参考官方提供的手册，跟着操作即可完成 Web 服务的部署</li></ul><h3 id="1-创建云服务实例，并进行web环境安装"><a href="#1-创建云服务实例，并进行web环境安装" class="headerlink" title="1. 创建云服务实例，并进行web环境安装"></a>1. 创建云服务实例，并进行web环境安装</h3><p>这里我试用了 Cloud9 云服务，在查找服务处搜索 Cloud9，并点击进入Cloud9服务面板即可<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909580877-2fce82c4-104c-4313-ba92-bd4b3b9b5e4d.webp#averageHue=%23293747&clientId=ue03c9e5c-081e-4&from=paste&id=u40e95b30&originHeight=593&originWidth=2104&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u2c07f033-79e5-4ae6-9441-755591db6f2&title="><br>点击创建环境<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909582341-b58efc10-8c5a-4b3c-9b0f-c511d87b6187.webp#averageHue=%2391999e&clientId=ue03c9e5c-081e-4&from=paste&id=ucc6ff143&originHeight=836&originWidth=1510&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u047034d6-ed2a-4355-b3f5-bcbf5d3bd9c&title="><br>我这里的设置如下<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909582798-7c98defd-78e3-4a4c-9cbc-69b013eda052.webp#averageHue=%23faeee7&clientId=ue03c9e5c-081e-4&from=paste&id=ueb3b65b5&originHeight=1140&originWidth=1116&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ue8709ce2-ef56-40e3-890e-703b0c4c16c&title="><br>其他部分配置保持默认，在页面底部点击橙色的 Create 按钮创建环境。 环境的创建将花费1-2分钟的时间。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909582836-37d68a32-1fca-4e0d-8843-2ed4af5a1bdf.webp#averageHue=%23f4f4ed&clientId=ue03c9e5c-081e-4&from=paste&id=u4db051a6&originHeight=1364&originWidth=1384&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u9a95dc2c-38fd-4d0c-b6c2-e82dfb7d570&title="><br>创建成功之后，点击 open 进入服务控制台<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909583725-be6a400f-d79b-4cee-958d-999705feee19.webp#averageHue=%23f5f3f0&clientId=ue03c9e5c-081e-4&from=paste&id=u66f27c26&originHeight=986&originWidth=1060&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u57e27000-0502-42ad-8c15-1f260b3d3be&title="><br>粘贴左侧的代码，复制到控制台bash窗口进行运行，会自动下载和解压代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/environment<br>wget https://static.us-east-1.prod.workshops.aws/public/73ea3a9f-37c8-4d01-ae4e-07cf6313adac/static/code/SampleWebApp.zip<br>unzip SampleWebApp.zip<br><br><span class="hljs-comment">#  在 AWS Cloud9 上安装 Flask 和 boto3</span><br>pip3 install Flask<br><br>pip3 install boto3<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909585462-e10169c3-a9ed-4c24-bd81-37976649dcd3.webp#averageHue=%23b3b8b2&clientId=ue03c9e5c-081e-4&from=paste&id=u4818236d&originHeight=438&originWidth=1000&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u9f878785-2b78-4b1f-b822-cf2ea6c321c&title="></p><h3 id="2-运行启动web服务，输入想要生成的图像参数和提示词，调用推理服务"><a href="#2-运行启动web服务，输入想要生成的图像参数和提示词，调用推理服务" class="headerlink" title="2. 运行启动web服务，输入想要生成的图像参数和提示词，调用推理服务"></a>2. 运行启动web服务，输入想要生成的图像参数和提示词，调用推理服务</h3><p>依赖的环境安装好之后，就可以运行这个服务代码<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909583665-6406a7a7-2f8c-41c3-b2f3-2a7825ecdd67.webp#averageHue=%23575e5e&clientId=ue03c9e5c-081e-4&from=paste&id=u4148a293&originHeight=1666&originWidth=3148&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ub58c4bc9-1489-4720-b1ef-2dd251d0b89&title="><br>服务启动成功之后，访问 127.0.0.1:8080 即可访问本地服务；设定 width 和 Length 参数，以及想要生成的图片描述，然后点击提交<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909584696-7973ccd6-e95d-4b42-a421-f74993f5e2c4.webp#averageHue=%236e716a&clientId=ue03c9e5c-081e-4&from=paste&id=uaa5ea80d&originHeight=1500&originWidth=3216&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u1ffeb837-f0e3-431e-93ad-d658064de6a&title="><br>等待 几秒钟之后，就得到了上面输入的两个 提示词对应生成的图像，看得出来效果还是非常不错的；</p><ul><li>经测试发现，即使每次输入的提示词是同一个，模型生成得到的输出也是不固定的</li><li>输入的提示词语越精准，生成的图像效果会容易越好</li><li>基于亚马逊SageMaker服务平台，如此快速（熟练之后，不到半个小时）就能搭建好一套AI模型的web端在线推理调用，果然好的技术就是第一生产力</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909585960-fc203823-1a5c-48fc-8c86-382392a9a9d8.webp#averageHue=%23aacdb8&clientId=ue03c9e5c-081e-4&from=paste&id=u5130f785&originHeight=1504&originWidth=2704&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u0952e4e3-3061-4493-a775-495cfa9d677&title="></p><h3 id="3-文本图像生成示例"><a href="#3-文本图像生成示例" class="headerlink" title="3. 文本图像生成示例"></a>3. 文本图像生成示例</h3><p>Stable Diffusion 对提示词有着非常高的要求，你输入的提示词越详细，能够让模型理解的越好，那么生成的图像内容就会越贴近预期，生成质量越好；<br>这里提供3组文本图像生成的示例，方便各位同学参考：</p><table><thead><tr><th>提示词</th><th>生成图像示例1</th><th>生成图像示例2</th></tr></thead><tbody><tr><td>A rabbit is piloting a spaceship</td><td><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909585652-64ae0862-c917-4a88-87cf-1059b3889308.webp#averageHue=%23b0dd73&clientId=ue03c9e5c-081e-4&from=paste&id=u8de033af&originHeight=768&originWidth=768&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ued3f8f18-960f-47b8-8a43-90db5e9ef0a&title="></td><td><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909587125-4f660319-9f86-4467-8bd8-98aa251daef2.webp#averageHue=%23a2d4c6&clientId=ue03c9e5c-081e-4&from=paste&id=u274412e3&originHeight=768&originWidth=768&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u7509644f-e62f-452c-a206-ac66d36e77d&title="></td></tr><tr><td>Driverless car speeds through the desert</td><td><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909588092-d10db08e-8298-4d77-8858-334c133ecf80.webp#averageHue=%23876d5d&clientId=ue03c9e5c-081e-4&from=paste&id=u835c5aab&originHeight=768&originWidth=768&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u89ad0b6c-9748-481f-bf77-0ac02565625&title="></td><td><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909588459-cb5a35a4-f586-4075-b75e-cdc383bce8a2.webp#averageHue=%2391796a&clientId=ue03c9e5c-081e-4&from=paste&id=ucf927f22&originHeight=768&originWidth=768&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u15bf3b89-1ad4-40fa-9498-b7fe5f6c0e5&title="></td></tr><tr><td>A small cabin on top of a snowy mountain in the style of Disney, artstation</td><td><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909589426-bd541111-2107-438e-afa5-ad6a1e030c9b.webp#averageHue=%237c9dca&clientId=ue03c9e5c-081e-4&from=paste&id=u0654f628&originHeight=768&originWidth=768&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u4cb01f7f-4214-4a22-acbb-9ba4fa4dc1f&title="></td><td><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909589937-40b8d761-912f-4884-97c2-819a9a7a2dae.webp#averageHue=%236a8ba0&clientId=ue03c9e5c-081e-4&from=paste&id=u48a755e8&originHeight=768&originWidth=768&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=uc41f88b6-e0e0-48c2-accf-2fb7d7a3033&title="></td></tr></tbody></table><p>转载：<a href="https://aitechtogether.com/python/114972.html">20分钟搞定 Stable Diffusion 模型在线服务部署</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>stable diffusion使用</title>
    <link href="/2023/07/23/stable%20diffusion%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/07/23/stable%20diffusion%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="方法一：自行部署并使用"><a href="#方法一：自行部署并使用" class="headerlink" title="方法一：自行部署并使用"></a>方法一：自行部署并使用</h3><p><a href="https://www.yuque.com/wayss000/tcsw/kt08se509w6wnlil?view=doc_embed">stable diffusion本地部署</a><br><a href="https://www.yuque.com/wayss000/tcsw/se013m32bcwmis5t?view=doc_embed">stable diffusion在线部署</a></p><h3 id="方法二：免费在线使用"><a href="#方法二：免费在线使用" class="headerlink" title="方法二：免费在线使用"></a>方法二：免费在线使用</h3><h4 id="网站一-https-aizhinan-cc-sites-43"><a href="#网站一-https-aizhinan-cc-sites-43" class="headerlink" title="网站一 https://aizhinan.cc/sites/43"></a>网站一 <a href="https://aizhinan.cc/sites/43">https://aizhinan.cc/sites/43</a></h4><p>是否需要注册登录：否<br>生成图片速度：较快（取决于提示词的长度）<br>网站截图：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688910283046-85b71948-0646-4abe-93e6-f477b2e1e443.png#averageHue=%234b6656&clientId=u30d76726-0cce-4&from=paste&height=204&id=uee70f4f6&originHeight=984&originWidth=1295&originalType=binary&ratio=1&rotation=0&showTitle=false&size=959089&status=done&style=none&taskId=u5e7ec568-b54a-4d95-82f0-dac8717b81f&title=&width=268" alt="image.png"></p><h4 id="网站二：https-huggingface-co-spaces-stabilityai-stable-diffusion"><a href="#网站二：https-huggingface-co-spaces-stabilityai-stable-diffusion" class="headerlink" title="网站二：https://huggingface.co/spaces/stabilityai/stable-diffusion"></a>网站二：<a href="https://huggingface.co/spaces/stabilityai/stable-diffusion">https://huggingface.co/spaces/stabilityai/stable-diffusion</a></h4><p>是否需要注册登录：否<br>生成图片速度：较慢（取决于提示词的长度）<br>网站提供方：Huggingface公司<br>缺点：</p><ul><li>可调的参数很少</li><li>在资源禁止的情况下，经常会运行失败。</li></ul><p>网站截图：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688910715178-ff91487f-67b3-4d7d-b691-68b90bd371a6.png#averageHue=%23936a48&clientId=u30d76726-0cce-4&from=paste&height=269&id=ucccc3b44&originHeight=994&originWidth=1226&originalType=binary&ratio=1&rotation=0&showTitle=false&size=897983&status=done&style=none&taskId=ud4b7d687-45e4-4333-9351-3c357ede22f&title=&width=332" alt="image.png"></p><h2 id="提示词高级用法"><a href="#提示词高级用法" class="headerlink" title="提示词高级用法"></a>提示词高级用法</h2><p><a href="https://www.yuque.com/wayss000/tcsw/fiockxy4r55890sf?view=doc_embed">stable diffusion提示词用法</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>stable diffusion在线部署</title>
    <link href="/2023/07/23/stable%20diffusion%E6%8F%90%E7%A4%BA%E8%AF%8D%E7%94%A8%E6%B3%95/"/>
    <url>/2023/07/23/stable%20diffusion%E6%8F%90%E7%A4%BA%E8%AF%8D%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>这节教学Stable Diffusion的提示词(prompt)写法，并附上范例。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911202114-c77dd70b-3fc7-4da1-abb3-f378cb0a36da.png#averageHue=%23c6ab90&clientId=ubd3f3176-df55-4&from=paste&height=815&id=u786f56cb&originHeight=815&originWidth=1876&originalType=binary&ratio=1&rotation=0&showTitle=false&size=618483&status=done&style=none&taskId=ue67fdfa4-b649-4fc4-87ce-99b40381070&title=&width=1876" alt="image.png"><br>非AUTOMATIC1111开发的Stable Diffusion也可以参考此教学，但要注意哪些是AUTOMATIC1111版独有的语法。<br>我们来看提示词要怎么写，以文生图模式的提示词为主。若要边看边练习的话，可以搭配 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/features/text-to-image/">文生图用法</a>操作。<br>不论用哪个模式生图，Stable Diffusion都是吃「正向」与「负向」提示词 (prompt，通俗的讲法叫关键字、咒语、指令)，并且要用英文输入。<br>你会在Stable Diffusion WebUI看到以下框框：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911219063-1448d8e2-2424-43f2-b5f1-94a730590a91.png#averageHue=%23fdfdfd&clientId=ubd3f3176-df55-4&from=paste&height=164&id=uc14d7a55&originHeight=164&originWidth=534&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23490&status=done&style=none&taskId=u0ad78bfe-9711-4297-a7ef-f225c646c1c&title=&width=534" alt="image.png"><br>第一个框框是提示词 (Prompt) 告诉AI要生成哪些东西。第二个框框是负向提示词 (Negative prompt) 告诉AI不要生成哪些东西。<br>首先要注意的是，AI生图目前还没有涵盖全宇宙所有图片的模型，所以除了提示词外，使用的生图模型亦会大大的影响生成结果。<br>譬如，用写实风格的Stable Diffusion模型画动漫人物，效果绝对会比使用Anything差的许多；又或者，想画出宛如真人coser的图，用ChilloutMix铁定比用只强调写实的RealisticVision要来的合适。因此在学会下提示词以前，要先按照用途挑选适合的模型。</p><h1 id="1-提示词-Prompts"><a href="#1-提示词-Prompts" class="headerlink" title="1. 提示词 Prompts #"></a>1. 提示词 Prompts <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#1-%e6%8f%90%e7%a4%ba%e8%af%8d-prompts">#</a></h1><p>这一节使用HD-v22的模型做示范，因此生成出来都会是动漫风格。</p><ol><li>下提示词时，利用人事时地物的概念，写个英文句子描述图内场景，尽量将想看到的提示词排在前面。例如在提示词的字段填入「一个亚洲女孩在沙滩上」，负向提示词留空</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">an</span> asian girl <span class="hljs-keyword">on</span> <span class="hljs-title">the</span> <span class="hljs-title">beach</span><br></code></pre></td></tr></table></figure><p>结果如下<br><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911095415-07dbf000-1d63-46de-8977-4351ec5b545a.png#averageHue=%23aebeb0&clientId=ubd3f3176-df55-4&from=paste&id=ud7636d1d&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=356713&status=done&style=none&taskId=ua1bb7af1-9251-401b-9cc5-14466f379af&title=" alt="image.png"></p><ol><li>不过英文不好的人其实不用写整个句子，用单字加逗号将想看的特征点出来通常就有不错效果。且实务上我们会希望测试更多参数，例如加入画风、要模仿的艺术家风格、身体特征等，因此用逗号更方便调整。将图片特征拆成单字就会变成下面这样：</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">; (绘图时请删除此行) 参考翻译：一个女孩，亚洲人，沙滩，海洋</span><br><span class="hljs-number">1</span>girl, asian, <span class="hljs-keyword">beach, </span>ocean<br></code></pre></td></tr></table></figure><p>再算一次，但是结果变了？没错，即使提示词相近，AI绘图每次生图结果都是随机的。要维持上一次的结果并微调，你得保留每次算图的种子码(Seed，SD WebUI界面左下角，亦会写在文件名上)。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911095465-381a8911-fe36-4ca1-90bf-daa30d64adf2.png#averageHue=%2389ab9b&clientId=ubd3f3176-df55-4&from=paste&id=ud2cb6e88&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=420651&status=done&style=none&taskId=u427e4380-d3bf-42b8-9f36-a8e14161049&title=" alt="image.png"></p><ol><li>接着可以多指定一点细节：这个女孩眼睛是什么颜色的？发型是什么？有戴帽子吗？是站着还是坐着呢？身上穿的是什么衣服？天空是什么颜色的？</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">; 参考翻译：一个女孩，亚洲人，蓝眼睛，短发，草帽，站着，蓝色比基尼，沙滩，海洋，橘色天空</span><br><span class="hljs-number">1</span>girl, asian, <span class="hljs-keyword">blue </span>eyes, <span class="hljs-keyword">short </span>hair, straw hat, standing, <span class="hljs-keyword">blue </span><span class="hljs-keyword">bikini, </span><span class="hljs-keyword">beach, </span>ocean, <span class="hljs-keyword">orange </span>sky<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911095485-9b47a0ae-a7b6-4f65-a795-3f7bb17af0be.png#averageHue=%2396a19a&clientId=ubd3f3176-df55-4&from=paste&id=u8021a079&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=369569&status=done&style=none&taskId=u3e270c75-052a-459c-bf81-d3b73631ba8&title=" alt="image.png"><br>呼，好像一口气加太多细节了呢，详述细节的好处是避免AI乱生成，但也限制了其作画创意。所以下面的例子会缩短，有时候让AI随机抽奖也不坏呀～</p><ol><li>要改变风格，可以在提示词加入「风格」的提示词。这方面的提示词有：相片(photshop)、3D建模(3d model)、装饰艺术(art deco)、石像(stone sculpture)等风格。</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">; 参考翻译：一个女孩的石像，亚洲人，蓝眼睛，沙滩，海洋</span><br>a stone <span class="hljs-keyword">sculpture </span>of <span class="hljs-number">1</span>girl, asian, <span class="hljs-keyword">blue </span>eyes, <span class="hljs-keyword">beach, </span>ocean<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911097146-0b2ac1d8-fc4b-4db2-b5c3-1de5543b6de5.png#averageHue=%23849fac&clientId=ubd3f3176-df55-4&from=paste&id=u4c4e8dbc&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=409674&status=done&style=none&taskId=u2160b953-d0cc-4f20-b0f6-d68581df4d2&title=" alt="image.png"><br>但我使用的模型已是专攻动漫风格的模型，所以不用特别指定要画出哪种风格，它一律都会是动漫风的图片，很难画出真人照片，所以说挑对模型很重要啊。</p><ol><li>风格是很难界定的东西呢，一般来说我们会图片像哪个艺术家的风格对吧？那么不如直接「召唤」他们吧！提示词可以包含某位画家的名字，AI会尝试模仿其风格。例如加上「慕夏的作品」，并加入「大师级作品」的风格提示词：</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">; 参考翻译：慕夏的作品，大师级作品，一个女孩，亚洲人，蓝眼睛，沙滩，海洋</span><br>artwork <span class="hljs-keyword">by </span>Alfons Maria Mucha, masterpiece, <span class="hljs-number">1</span>girl, asian, <span class="hljs-keyword">blue </span>eyes, <span class="hljs-keyword">beach, </span>ocean<br></code></pre></td></tr></table></figure><p>生图的结果就会变得像是慕夏的作品。顺带一提masterpiece这个提示词还蛮万用的，可以让作品维持一定水准。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911097457-0e34e55f-5349-4ab6-b55b-7c4f6aa277c9.png#averageHue=%23979988&clientId=ubd3f3176-df55-4&from=paste&id=u72332922&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=457924&status=done&style=none&taskId=u27108963-821b-44b7-a671-3c7fe66a7ae&title=" alt="image.png"></p><ol><li>当然还可以画特定动漫人物的「二创」，只要将名字和作品名称打上去就可以了。有名的动漫角色只要出现名字，不用特别指定身体特征就会生成原作风格了，例如指定《新世纪福音战士》的惣流·明日香·兰格雷：</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">; 参考翻译：新世纪福音战士的明日香，大师级作品，一个女孩，沙滩，海洋</span><br>asuka_langley_souryuu from neon_genesis_evangelion, masterpiece, <span class="hljs-number">1</span>girl, <span class="hljs-keyword">beach, </span>ocean<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911097518-1df72eed-e6dc-45ef-a8c1-b1ecfa8bb782.png#averageHue=%236b83bc&clientId=ubd3f3176-df55-4&from=paste&id=u6d55aea2&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=499826&status=done&style=none&taskId=ue27a4577-d137-4e85-8a99-757f11db4f1&title=" alt="image.png"><br>再次提醒，在下提示词的时候，生成图片使用的模型也需纳入考量。譬如想要生成特定动漫人物，去Danbooru找到了英文姓名，加上提示词，但你却用画真人的Stable Diffusion去算，则AI可能根本就不会认得你说的角色是谁，反之亦然。Danbooru的标签风格跟一般图片的描述还是有差距的。<br>除非日后有搜罗全部网络图片的超大模型出现，否则下提示词须配合模型种类来决定。<br>如果AI怎样都生成不出你要的风格或人物，请考虑换个模型，或是 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/training/">自行训练模型</a>。</p><h1 id="2-负向提示词-Negative-Prompts"><a href="#2-负向提示词-Negative-Prompts" class="headerlink" title="2. 负向提示词 Negative Prompts #"></a>2. 负向提示词 Negative Prompts <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#2-%e8%b4%9f%e5%90%91%e6%8f%90%e7%a4%ba%e8%af%8d-negative-prompts">#</a></h1><p>上面的例子，我们只有写提示词，但下面的负向提示词的字段都是空白。但生图时常常还需要加入一些负向提示词，避免掉不好的结果。AI绘图有时不会一次就算出好结果，所以还需要加上负向提示词来控制，尤其是大批算图的时候更为重要。</p><ol><li>负向提示词会加入一些常见的「不好」的图片特征，例如低画质、最糟品质、画家签名、模糊、浮水印</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">deformed, lowres, <span class="hljs-keyword">bad </span>anatomy, text, error, <span class="hljs-keyword">extra </span><span class="hljs-keyword">digit, </span>fewer <span class="hljs-keyword">digits, </span>cropped, worst quality, low quality, <span class="hljs-keyword">normal </span>quality, <span class="hljs-keyword">jpeg </span>artifacts, signature, watermark, username, <span class="hljs-keyword">blurry, </span>artist name<br></code></pre></td></tr></table></figure><ol><li>不想看到的东西也可以加进去。例如不想看到裸露、兵器、血、猎奇的元素出现，就加入nsfw、weapon、blood、guro至负向提示词</li></ol><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">nsfw, weapon, <span class="hljs-keyword">blood, </span>guro, lowres, <span class="hljs-keyword">bad </span>anatomy, text, error, <span class="hljs-keyword">extra </span><span class="hljs-keyword">digit, </span>fewer <span class="hljs-keyword">digits, </span>cropped, worst quality, low quality, <span class="hljs-keyword">normal </span>quality, <span class="hljs-keyword">jpeg </span>artifacts,signature, watermark, username, <span class="hljs-keyword">blurry, </span>artist name<br></code></pre></td></tr></table></figure><p>提示词并非越多越好，正向提示词以不超过150个词元(token)为原则；不过负向提示词可以尽量把不想看到的都塞进去。</p><h1 id="3-Stable-Diffusion-WebUI独有语法"><a href="#3-Stable-Diffusion-WebUI独有语法" class="headerlink" title="3. Stable Diffusion WebUI独有语法 #"></a>3. Stable Diffusion WebUI独有语法 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#3-stable-diffusion-webui%e7%8b%ac%e6%9c%89%e8%af%ad%e6%b3%95">#</a></h1><p>此节列出的语法为AUTOMATIC1111制作的SD WebUI独有，使用其他人制作的Stable Diffusion程序不见得适用。</p><h2 id="关注度括号-Attention-emphasis"><a href="#关注度括号-Attention-emphasis" class="headerlink" title="关注度括号 Attention&#x2F;emphasis #"></a>关注度括号 Attention&#x2F;emphasis <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e5%85%b3%e6%b3%a8%e5%ba%a6%e6%8b%ac%e5%8f%b7-attentionemphasis">#</a></h2><p>控制关注度的符号，增加算图时对该提示词的关注度(attention)。简单来说，括号就是你想强调的重点元素，括号越多，生成的结果越会符合括号里的提示词。<br>SD WebUI使用小括号控制关注度： ( ) 小括号层次越多权重越高(不加小括号为1倍，每加一层小括号乘以1.1倍)。例如，强调「蓝眼睛」，生成的结果就更高几率是蓝眼睛人物</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">asian, woman, ((<span class="hljs-keyword">blue </span>eyes)), <span class="hljs-keyword">beach, </span>ocean<br></code></pre></td></tr></table></figure><p>亦可以直接写明要增强几倍关注度，但其实一般情况下不用设太强，用一二层的小括号就够了。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">asian</span>, woman, (blue eyes:<span class="hljs-number">2</span>.<span class="hljs-number">5</span>), beach, ocean<br></code></pre></td></tr></table></figure><p>SD WebUI还支持[ ]中括号，越多权重越弱(乘以1.1倍)，通常用在负向提示词字段。<br>＊给用过NovelAI的用户：SD WebUI的小括号( )效果等价于NovelAI的大括号{ }，都是增加对该提示词的关注度。</p><h2 id="提示词编辑-Prompt-editing"><a href="#提示词编辑-Prompt-editing" class="headerlink" title="提示词编辑 Prompt editing #"></a>提示词编辑 Prompt editing <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e6%8f%90%e7%a4%ba%e8%af%8d%e7%bc%96%e8%be%91-prompt-editing">#</a></h2><p>指定在到哪一步数的时候切换提示词。此处的中括号跟权重无关。<br>语法为[提示词1:提示词2:要切换的步数]<br>例如，算图时设置20步，一开始算橘子，设置算到15步时切换成苹果</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">[orange : <span class="hljs-type">apple</span> : 15] <span class="hljs-type">on</span> table<br></code></pre></td></tr></table></figure><h2 id="切换单字-Alternating-Words"><a href="#切换单字-Alternating-Words" class="headerlink" title="切换单字 Alternating Words #"></a>切换单字 Alternating Words <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e5%88%87%e6%8d%a2%e5%8d%95%e5%ad%97-alternating-words">#</a></h2><p>使用|代表在每个步数切换提示词，例如我要在算图时于「蓝眼睛」或「红眼睛」或「黑眼睛」之间切换</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">asian, woman, [<span class="hljs-keyword">blue </span>eyes<span class="hljs-title">|red eyes|</span><span class="hljs-keyword">black </span>eyes], <span class="hljs-keyword">beach, </span>ocean<br></code></pre></td></tr></table></figure><h2 id="可组合性扩散-Composable-Diffusion"><a href="#可组合性扩散-Composable-Diffusion" class="headerlink" title="可组合性扩散 Composable Diffusion #"></a>可组合性扩散 Composable Diffusion <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e5%8f%af%e7%bb%84%e5%90%88%e6%80%a7%e6%89%a9%e6%95%a3-composable-diffusion">#</a></h2><p>此语法让AI依照权重生成二个不同的对象。<br>例如生成橘子与苹果，中间用大写的AND连接</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-keyword">orange </span><span class="hljs-keyword">AND </span>apple<br></code></pre></td></tr></table></figure><p>后面加上数字控制权重，初始值为1，数值低于0.1则无效。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">orange</span> :<span class="hljs-number">1</span>.<span class="hljs-number">5</span> AND apple :<span class="hljs-number">2</span>.<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><p>此语法适合搭配 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/extensions/latent-couple/">ControlNet和Latent Couple</a>，可以准确控制图中对象的位置。</p><h1 id="4-提示词范例"><a href="#4-提示词范例" class="headerlink" title="4. 提示词范例 #"></a>4. 提示词范例 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#4-%e6%8f%90%e7%a4%ba%e8%af%8d%e8%8c%83%e4%be%8b">#</a></h1><p>这里提供一些懒人包。负向提示词有些是通用的。</p><h2 id="生成可爱的狗勾"><a href="#生成可爱的狗勾" class="headerlink" title="生成可爱的狗勾 #"></a>生成可爱的狗勾 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e7%94%9f%e6%88%90%e5%8f%af%e7%88%b1%e7%9a%84%e7%8b%97%e5%8b%be">#</a></h2><p>让我们试着画几只柯基犬在草地上奔跑。<br>建议使用模型：Stable Diffusion、Realistic Vision<br>提示词</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">3 </span>corgi dogs running <span class="hljs-keyword">on</span> grass <span class="hljs-keyword">field</span><br></code></pre></td></tr></table></figure><p>负向提示词</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">lowres, <span class="hljs-keyword">bad </span>anatomy, text, error, <span class="hljs-keyword">extra </span><span class="hljs-keyword">digit, </span>fewer <span class="hljs-keyword">digits, </span>cropped, worst quality, low quality, <span class="hljs-keyword">normal </span>quality, <span class="hljs-keyword">jpeg </span>artifacts,signature, watermark, username, <span class="hljs-keyword">blurry, </span>artist name<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911098039-11cde230-e1b7-467a-b009-0aedddfa616b.png#averageHue=%236c8943&clientId=ubd3f3176-df55-4&from=paste&id=u2a4fb5f0&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=503669&status=done&style=none&taskId=u9668e364-dc5b-4650-bb59-7a233b7bf9d&title=" alt="image.png"></p><h2 id="生成高科技未来城市"><a href="#生成高科技未来城市" class="headerlink" title="生成高科技未来城市 #"></a>生成高科技未来城市 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e7%94%9f%e6%88%90%e9%ab%98%e7%a7%91%e6%8a%80%e6%9c%aa%e6%9d%a5%e5%9f%8e%e5%b8%82">#</a></h2><p>建议使用模型：Stable Diffusion、Realistic Vision<br>提示词</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">city future, <span class="hljs-number">8</span>k, exploration, cinematic, realistic, unreal engine, hyper detailed, volumetric light, moody cinematic epic <span class="hljs-keyword">concept</span> art, realistic matte painting, hyper photorealistic<br></code></pre></td></tr></table></figure><p>负向提示词</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">lowres, <span class="hljs-keyword">bad </span>anatomy, text, error, <span class="hljs-keyword">extra </span><span class="hljs-keyword">digit, </span>fewer <span class="hljs-keyword">digits, </span>cropped, worst quality, low quality, <span class="hljs-keyword">normal </span>quality, <span class="hljs-keyword">jpeg </span>artifacts,signature, watermark, username, <span class="hljs-keyword">blurry, </span>artist name<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911098575-5e90b2f4-9132-42c2-b736-4117bfd0c885.png#averageHue=%2346495a&clientId=ubd3f3176-df55-4&from=paste&id=uc031e8b5&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=537128&status=done&style=none&taskId=u2efb1c01-b170-49fd-8080-240cbfe6d6e&title=" alt="image.png"></p><h2 id="生成一台特斯拉车子"><a href="#生成一台特斯拉车子" class="headerlink" title="生成一台特斯拉车子 #"></a>生成一台特斯拉车子 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e7%94%9f%e6%88%90%e4%b8%80%e5%8f%b0%e7%89%b9%e6%96%af%e6%8b%89%e8%bd%a6%e5%ad%90">#</a></h2><p>建议使用模型：Stable Diffusion、Realistic Vision<br>提示词</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">concept</span> art,tesla car, aerodynamic, future<br></code></pre></td></tr></table></figure><p>负向提示词</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">lowres, <span class="hljs-keyword">bad </span>anatomy, text, error, <span class="hljs-keyword">extra </span><span class="hljs-keyword">digit, </span>fewer <span class="hljs-keyword">digits, </span>cropped, worst quality, low quality, <span class="hljs-keyword">normal </span>quality, <span class="hljs-keyword">jpeg </span>artifacts,signature, watermark, username, <span class="hljs-keyword">blurry, </span>artist name<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911098553-06059070-7d6e-454f-8ff7-76fd4dab0318.png#averageHue=%238faac7&clientId=ubd3f3176-df55-4&from=paste&id=uec4bdc33&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=478248&status=done&style=none&taskId=u251c8efb-efe3-4e0b-bbf8-d5dfc63f782&title=" alt="image.png"></p><h2 id="生成动漫美少女"><a href="#生成动漫美少女" class="headerlink" title="生成动漫美少女 #"></a>生成动漫美少女 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e7%94%9f%e6%88%90%e5%8a%a8%e6%bc%ab%e7%be%8e%e5%b0%91%e5%a5%b3">#</a></h2><p>建议使用模型：Anything、Hentai Diffusion<br>随机画一个Fate&#x2F;Grand Order的贞德<br>提示词</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">jeanne d<span class="hljs-symbol">&#x27;arc</span> from fate grand order, <span class="hljs-number">1</span>girl, (best quality), (masterpiece), (high detail), ((full face)), sharp, ((looking <span class="hljs-keyword">at</span> viewer)), ((detailed pupils)), (thick thighs), (((full <span class="hljs-keyword">body</span>))), (large breasts)<br></code></pre></td></tr></table></figure><p>负向提示词</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">lowres, <span class="hljs-keyword">bad </span>anatomy, <span class="hljs-keyword">bad </span>hands, text, error, missing fingers, <span class="hljs-keyword">extra </span><span class="hljs-keyword">digit, </span>fewer <span class="hljs-keyword">digits, </span>cropped, worst quality, low quality, <span class="hljs-keyword">normal </span>quality, <span class="hljs-keyword">jpeg </span>artifacts,signature, watermark, username, <span class="hljs-keyword">blurry, </span>artist name<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911100270-5ed45ac9-0bb5-4e4d-b7fe-a81398bd8ac3.png#averageHue=%23adafac&clientId=ubd3f3176-df55-4&from=paste&id=u4b1fb0e3&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=488659&status=done&style=none&taskId=u3dd79ac7-af46-47b0-a191-e8338b4a23a&title=" alt="image.png"></p><h2 id="生成日韩风真人女孩"><a href="#生成日韩风真人女孩" class="headerlink" title="生成日韩风真人女孩 #"></a>生成日韩风真人女孩 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#%e7%94%9f%e6%88%90%e6%97%a5%e9%9f%a9%e9%a3%8e%e7%9c%9f%e4%ba%ba%e5%a5%b3%e5%ad%a9">#</a></h2><p>建议使用模型：ChilloutMix、Perfect World，并适时使用Japanese Doll的LoRA。<br>随机画一个日本女孩，不要色色<br>提示词</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">(a <span class="hljs-keyword">japanese </span>woman), <span class="hljs-keyword">shiny </span>skin, (ultra high res,photorealistic,realistic,<span class="hljs-keyword">best </span>quality,photo-realistic), (((high detailed skin,visible pores))),(real person,photograph), (<span class="hljs-number">8</span>k, raw photo, <span class="hljs-keyword">best </span>quality, masterpiece),(<span class="hljs-number">1</span>girl),photon mapping, radiosity, physically-<span class="hljs-keyword">based </span>rendering,automatic white <span class="hljs-keyword">balance,(haunting </span>smile,moist lips),watery eyes, (<span class="hljs-keyword">blush|cute </span><span class="hljs-keyword">and </span>playful<span class="hljs-title">|adorable|</span>thick <span class="hljs-keyword">bangs|beauty),((irises </span><span class="hljs-keyword">and </span>pupils are rounded,the pupil reflects the surroundings,eyes are not the same size))<br></code></pre></td></tr></table></figure><p>负向提示词</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">nude, lowres,blurry,simple <span class="hljs-attribute">background</span>,jpeg artifacts,bad-artist,bad shadow,compressed image,low pixel,light spot, paintings,sketches,((monochrome)),((grayscale)),noise point,semi-realistic, <span class="hljs-number">3</span>d,render,cg,drawing,cartoon,anime,comic,username,watermark,signature,cropped,error,censored,text,stain, deformed iris,deformed pupils,deformed nail,deformed ear,deformed eye,deformed eyelid,collapsed eyeshadow, <span class="hljs-selector-attr">[excessive skin spots,excessive skin imperfections,skin blemishes,skin fold,rough skinstain skin]</span>,goosebumps,skin layering,axillary fold,facial contortion, (flawless face),trimming<br></code></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/209761/1688911100310-8d15a245-4f11-4219-8f39-abc21aec193d.png#averageHue=%23757d35&clientId=ubd3f3176-df55-4&from=paste&id=ufa90d0cb&originHeight=512&originWidth=512&originalType=url&ratio=1&rotation=0&showTitle=false&size=500065&status=done&style=none&taskId=ub64a1751-e200-4573-81a0-442b85597de&title=" alt="image.png"></p><h1 id="5-值得参考的提示词网站"><a href="#5-值得参考的提示词网站" class="headerlink" title="5. 值得参考的提示词网站 #"></a>5. 值得参考的提示词网站 <a href="https://ivonblog.com/posts/stable-diffusion-webui-manuals/zh-cn/prompts/general-prompt-guide/#5-%e5%80%bc%e5%be%97%e5%8f%82%e8%80%83%e7%9a%84%e6%8f%90%e7%a4%ba%e8%af%8d%e7%bd%91%e7%ab%99">#</a></h1><p>若使用的是SD模型，想生成真人，请看 <a href="https://rentry.org/artists_sd-v1-4">Voldy</a>整理的历史上有名的艺术家。<br>若使用动漫风的模型请看 <a href="https://danbooru.donmai.us/">Danbooru</a>图库的标签决定要下哪些提示词。<br><a href="https://promptomania.com/stable-diffusion-prompt-builder/">Prompt Generator</a>和 <a href="https://thereisnospon.github.io/NovelAiTag/">NovelAI魔导书</a>可以协助你组合提示词。<br><a href="https://civitai.com/">Civitai</a>除了下载模型外，还有很多现成的提示词搭配模型的范例可以照抄。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>stable diffusion在线部署</title>
    <link href="/2023/07/23/stable%20diffusion%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/"/>
    <url>/2023/07/23/stable%20diffusion%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="1-前言："><a href="#1-前言：" class="headerlink" title="1.前言："></a>1.前言：</h2><p>最近看Stable Diffusion开源了，据说比Disco Diffusion更快，于是从git上拉取了项目尝试本地部署了，记录分享一下过程~<br>这里是官网介绍：<a href="https://stability.ai/blog/stable-diffusion-public-release">https://stability.ai/blog/stable-diffusion-public-release</a></p><h2 id="2-必要前提："><a href="#2-必要前提：" class="headerlink" title="2.必要前提："></a>2.必要前提：</h2><ol><li>科学上网。很多链接都需要用到。</li><li>显卡的显存需要足够大，至于多大没看到哪有说，反正6g绝对不行</li></ol><h2 id="3-部署前准备："><a href="#3-部署前准备：" class="headerlink" title="3.部署前准备："></a>3.部署前准备：</h2><p>本地化部署运行虽然很好，但是也有一些基本要求<br>（1）需要拥有NVIDIA显卡，GT1060起，显存4G以上。（已经不需要3080起，亲民不少）<br>（2）操作系统需要win10或者win11的系统。<br>MacOS平台本地化请见《如何在mac电脑上运行stable diffusion来做AI绘画》<br>（3）电脑内存16G或者以上。<br>（4）最好会魔法上网，否则网络波动，有些网页打不开，有时下载很慢。<br>（5）耐心，多尝试，多搜索。这个教程我已经重复过2次，因此很多问题基本上都踩坑并写出来了。所以请放心，能跑通的。<br>我的电脑配置供大家参考，Win10，I7，NVIDIA GT1050 4G，16G<br>生成一张20step的图大概20-30s（若使用更高性能的电脑，生成速度更快。）</p><h2 id="4-使用的项目Stable-diffusion-WebUI项目"><a href="#4-使用的项目Stable-diffusion-WebUI项目" class="headerlink" title="4.使用的项目Stable diffusion WebUI项目"></a>4.使用的项目Stable diffusion WebUI项目</h2><p>Stable diffusion大家都知道了，是当前最多人使用且效果最好的开源AI绘图软件之一，属于当红炸子鸡了。<br>不过，stable diffusion项目本地化的部署，是纯代码界面，使用起来对于非程序员没那么友好。<br>而stable diffusion webui，是基于stable diffusion 项目的可视化操作项目。<br>通过可视化的网页操作，更方便调试prompt，及各种参数。<br>同时也附加了很多功能，比如img2img功能，extra放大图片功能等等。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909889221-7822b851-7d47-4fee-9082-34cb2d195c41.webp#averageHue=%23fdfcfc&clientId=ue216eeb4-8a2a-4&from=paste&id=u84be11dd&originHeight=937&originWidth=1920&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u020c9835-22de-4c4c-a7bc-c85352acea8&title="><br>因此stable diffusion webui项目是很多人部署到本地的首选。<br>我们本教程就是以stable diffusion webui项目为例来操作的。</p><h1 id="二、电脑环境配置"><a href="#二、电脑环境配置" class="headerlink" title="二、电脑环境配置"></a>二、电脑环境配置</h1><h2 id="1-安装miniconda"><a href="#1-安装miniconda" class="headerlink" title="1.安装miniconda"></a>1.安装miniconda</h2><p>这个是用来管理python版本的，他可以实现python的多版本切换。<br>下载地址：<a href="https://docs.conda.io/en/latest/miniconda.html">https://docs.conda.io/en/latest/miniconda.html</a><br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909889235-db47319f-9497-4bac-ab04-d3038e6cf83c.webp#averageHue=%23f8f8f8&clientId=ue216eeb4-8a2a-4&from=paste&id=ub5985c0f&originHeight=937&originWidth=1920&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ud0f57de8-0505-4e0c-bfec-659d6a95f1a&title="><br>安装时按默认的一路next就行。</p><h2 id="2-用管理员权限打开miniconda，输入conda-V-弹出版本号即为正确安装"><a href="#2-用管理员权限打开miniconda，输入conda-V-弹出版本号即为正确安装" class="headerlink" title="2.用管理员权限打开miniconda，输入conda -V 弹出版本号即为正确安装"></a>2.用管理员权限打开miniconda，输入conda -V 弹出版本号即为正确安装</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909890902-8a9e69ee-a4aa-48f3-aeee-daf6583c458f.webp#averageHue=%23444342&clientId=ue216eeb4-8a2a-4&from=paste&id=u864a6b12&originHeight=506&originWidth=633&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ude8cc227-2c5e-4e19-80b0-f64198f8cc1&title="><br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909889191-2d3fd8b2-b169-4ede-b556-5883cd608176.webp#averageHue=%230d0d0d&clientId=ue216eeb4-8a2a-4&from=paste&id=udb01c4f9&originHeight=480&originWidth=960&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u1f89d5a3-75e8-4f8e-948a-b9b0401d639&title="></p><h2 id="3-配置库包下载环境，加快网络速度（替换下载库包地址为国内的清华镜像站）"><a href="#3-配置库包下载环境，加快网络速度（替换下载库包地址为国内的清华镜像站）" class="headerlink" title="3.配置库包下载环境，加快网络速度（替换下载库包地址为国内的清华镜像站）"></a>3.配置库包下载环境，加快网络速度（替换下载库包地址为国内的清华镜像站）</h2><p>执行下面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --<span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>生成.condarc 文件<br>在我的电脑&#x2F;此电脑-C盘-users-你的账号名下用记事本打开并修改.condarc文件。（如我的路径是C:\Users\Administrator。）<br>把下面的内容全部复制进去，全部覆盖原内容，ctrl+s保存，关闭文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">channels:<br> - defaults<br>show_channel_urls: <span class="hljs-literal">true</span><br>default_channels:<br> - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br> - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r<br> - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2<br>custom_channels:<br> conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br> msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br> bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br> menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br> pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br> pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br> simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>运行conda clean -i 清除索引缓存，以确保使用的是镜像站的地址。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909889192-4ff3847c-359d-427b-8023-19909268f6eb.webp#averageHue=%230d0d0d&clientId=ue216eeb4-8a2a-4&from=paste&id=u300c074f&originHeight=480&originWidth=960&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u9cf3a9bd-8d82-4633-a19c-6ef6c0979fe&title="></p><h2 id="4-创建python-3-10-6版本的环境"><a href="#4-创建python-3-10-6版本的环境" class="headerlink" title="4.创建python 3.10.6版本的环境"></a>4.创建python 3.10.6版本的环境</h2><p>运行下面语句，创建环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create --name lmd python=3.10.6<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>系统可能会提示y&#x2F;n, 输入y，按回车即可。<br>显示done，那就完成了。<br>在你的C:\ProgramData\Miniconda3\envs\lmd已经创建了一个新的项目。</p><h2 id="5-激活环境"><a href="#5-激活环境" class="headerlink" title="5.激活环境"></a>5.激活环境</h2><p>输入conda activate lmd 回车。</p><h2 id="6-升级pip，并设置pip的默认库包下载地址为清华镜像。"><a href="#6-升级pip，并设置pip的默认库包下载地址为清华镜像。" class="headerlink" title="6.升级pip，并设置pip的默认库包下载地址为清华镜像。"></a>6.升级pip，并设置pip的默认库包下载地址为清华镜像。</h2><p>每一行输入后回车，等执行完再输入下一行，再回车。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">python -m pip install --upgrade pip<br>pip config <span class="hljs-built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>不报错就是完成了。</p><h2 id="7-安装git，用来克隆下载github的项目，比如本作中的stable-diffusion-webui"><a href="#7-安装git，用来克隆下载github的项目，比如本作中的stable-diffusion-webui" class="headerlink" title="7.安装git，用来克隆下载github的项目，比如本作中的stable diffusion webui"></a>7.安装git，用来克隆下载github的项目，比如本作中的stable diffusion webui</h2><p>前往git官网<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a><br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909889831-3e4d86a4-63dc-4fde-8e4f-4ab3da8488ff.webp#averageHue=%23f1f0ea&clientId=ue216eeb4-8a2a-4&from=paste&id=u03649e48&originHeight=937&originWidth=1920&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u19765c84-18bf-489b-8a77-c92c003b8de&title="><br>下载好后，一路默认安装，next即可。<br>开始菜单找到git cmd。<br>打开并输入下面指令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git --version<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>查看git的版本，显示了版本号即安装成功。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909889791-9e25e947-4f54-47a2-8078-e0b857ce0664.webp#averageHue=%23000000&clientId=ue216eeb4-8a2a-4&from=paste&id=u5c2ea4f8&originHeight=338&originWidth=562&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ufe9db022-8b13-4a06-b0b6-70dd3b215e0&title="></p><h2 id="8-安装cuda"><a href="#8-安装cuda" class="headerlink" title="8.安装cuda"></a>8.安装cuda</h2><p>cuda是NVIDIA显卡用来跑算法的依赖程序，所以我们需要它。<br>打开NVIDIA cuda官网，<a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a><br>（这里有人可能会打不开网页，如果打不开，请用魔法上网。）<br>你会发现有很多版本，下载哪个版本呢？<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909890170-037d14ab-a33a-40c7-bc8d-80e9d4534dfb.webp#averageHue=%23c5c4c4&clientId=ue216eeb4-8a2a-4&from=paste&id=u35b39880&originHeight=937&originWidth=1920&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ue48fbbd2-0690-4099-8249-09d52b800d1&title="><br>回到一开始的miniconda的小窗，输入nvidia-smi，查看你的cuda版本<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909890399-9d1f075d-9100-4c15-bbed-575a4ea96ed0.webp#averageHue=%230d0d0d&clientId=ue216eeb4-8a2a-4&from=paste&id=u7ea65f08&originHeight=1017&originWidth=1903&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ue4d7000c-a0c9-4cbd-9104-f658f598ac9&title="><br>比如我的是12.1的版本，我就下载12.1.0的链接<br>下载完后安装，这个软件2个G，可以安装在c盘以外的地方。比如D盘。<br>好了，完成这步，电脑的基础环境设置终于完事了。<br>下面开始正式折腾stable diffusion了。<br><em><strong>注意：如果提示此命令nvidia-smi，非内部命令时，按以下操作</strong></em><br>把此路径：C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR，放入到环境变量中<br>显卡所在路径：<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909890811-8d82c931-e498-4df1-a8b2-ba7f053970e3.webp#averageHue=%23fdfdfd&clientId=ue216eeb4-8a2a-4&from=paste&id=u37fc89f5&originHeight=544&originWidth=963&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u47d02861-ba67-442a-95ce-ae3efafd693&title="><br>环境变量位置：<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909891253-e82f693d-1da2-4170-a1ae-2279b5994c4b.webp#averageHue=%23f4f3f3&clientId=ue216eeb4-8a2a-4&from=paste&id=u37183442&originHeight=798&originWidth=1765&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=uf2989a13-8f72-44f2-9d91-a7363be10b2&title="></p><h1 id="三、stable-diffusion环境配置"><a href="#三、stable-diffusion环境配置" class="headerlink" title="三、stable diffusion环境配置"></a>三、stable diffusion环境配置</h1><h2 id="1-下载stable-diffusion源码"><a href="#1-下载stable-diffusion源码" class="headerlink" title="1.下载stable diffusion源码"></a>1.下载stable diffusion源码</h2><p>确认你的miniconda黑色小窗显示的是(把stable看成是lmd就行)<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909891591-c89c0092-c8ad-49fd-8967-3a0b64d8f963.webp#averageHue=%230c0c0c&clientId=ue216eeb4-8a2a-4&from=paste&id=ub78fe9cb&originHeight=1017&originWidth=1903&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u886e69b8-b8fc-49a3-8ee0-a614777876f&title="><br>如果不是，则输入D: 按回车。<br>当然你也可以放在其他你想放的盘的根目录里面。<br>不建议放在c盘，因为这个项目里面有一些模型包，都是几个G几个G的，很容易你的C盘就满了，其他盘容量在10G以上的就都行。<br>再来克隆stable diffusion webui项目（下面简称sd-webui）<br>接着执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui.git<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>注意，现在克隆的本地地址，就是下面经常提到的“项目根目录”。比如，我的项目根目录是D:\stable-diffusion-webui</p><h2 id="2-下载stable-diffusion的训练模型"><a href="#2-下载stable-diffusion的训练模型" class="headerlink" title="2.下载stable diffusion的训练模型"></a>2.下载stable diffusion的训练模型</h2><p>地址：<a href="https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/tree/main">https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/tree/main</a><br>点击file and versions选项卡，下载sd-v1-4.ckpt训练模型。<br>（需要注册且同意协议，注册并同意协议之后即可下载）<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909891960-0faabc36-8973-4506-812d-eb5c58dce5e4.webp#averageHue=%23fdfdfd&clientId=ue216eeb4-8a2a-4&from=paste&id=ua611e2a4&originHeight=937&originWidth=1920&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ucbbb0d9b-a560-4eb3-904b-961d517e5b3&title="><br>注：这个模型是用于后续生成AI绘图的绘图元素基础模型库。<br>后面如果要用waifuai或者novelai，其实更换模型放进去sd-webui项目的模型文件夹即可。<br>我们现在先用stable diffusion 1.4的模型来继续往下走。</p><h2 id="3-更改训练模型名称"><a href="#3-更改训练模型名称" class="headerlink" title="3.更改训练模型名称"></a>3.更改训练模型名称</h2><p>下载好之后，请把模型更名成model.ckpt,然后放置在sd-webui的models&#x2F;stable-diffusion目录下。比如我的路径是D:\stable-diffusion-webui\models\Stable-diffusion<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909891800-2f69fcb7-baaa-42b2-a1d5-320a365adf72.webp#averageHue=%23fefefe&clientId=ue216eeb4-8a2a-4&from=paste&id=u7643fcc5&originHeight=960&originWidth=1767&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u78626d1f-51de-4c9c-9b40-b4ff913a166&title="></p><h2 id="4-安装GFPGAN"><a href="#4-安装GFPGAN" class="headerlink" title="4. 安装GFPGAN"></a>4. 安装GFPGAN</h2><p>这是腾讯旗下的一个开源项目，可以用于修复和绘制人脸，减少stable diffusion人脸的绘制扭曲变形问题<br>地址：<a href="https://github.com/TencentARC/GFPGAN">https://github.com/TencentARC/GFPGAN</a><br>把网页往下拉，拉到readme.md部分，找到V1.4 model，点击蓝色的1.4就可以下载。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909892214-e07bdc69-2af5-40ee-8cee-cef8754fb1a0.webp#averageHue=%23fdfdfd&clientId=ue216eeb4-8a2a-4&from=paste&id=u4e7ec006&originHeight=937&originWidth=1920&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=ua24d081b-30fb-4cba-b034-829eafdeacf&title="><br>下载好之后，放在sd-webui项目的根目录下面即可，比如我的根目录是D:\stable-diffusion-webui</p><h2 id="4-在miniconda的黑色小窗，准备开启运行ai绘图程序sd-webui"><a href="#4-在miniconda的黑色小窗，准备开启运行ai绘图程序sd-webui" class="headerlink" title="4.在miniconda的黑色小窗，准备开启运行ai绘图程序sd-webui"></a>4.在miniconda的黑色小窗，准备开启运行ai绘图程序sd-webui</h2><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> stable-diffusion-webui<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>进入项目的根目录。<br>切记，一定要进入sd-webui的项目根目录后，才能执行下面的指令，否则会报错。<br>接着执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">webui-user.bat<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>然后回车，等待系统自动开始执行。<br>直到系统提示，running on local URL: <a href="http://127.0.0.1:7860/">http://127.0.0.1:7860</a><br>这就代表，你可以开始正式使用AI画画啦~<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909892404-30025fe1-0334-4e52-89e2-927c62c1a8d3.webp#averageHue=%23292929&clientId=ue216eeb4-8a2a-4&from=paste&id=u8cf06388&originHeight=478&originWidth=1903&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u7d3a87f3-7ae4-4b65-9cfe-7720b7978e6&title="><br>注意：<br>这一步可能经常各种报错，需要耐心和时间多次尝试。<br>不要关闭黑色小窗，哪怕它几分钟没有任何变化。<br>如果提示连接错误，可能需要开启或者关闭魔法上网，再重新执行webui-user.bat命令。<br>如果不小心退出了黑色窗口，则重新点击：开始菜单-程序-打开miniconda窗口，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate lmd<br></code></pre></td></tr></table></figure><p>Bash<br>Copy<br>并进入sd-webui项目根目录再执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">webui-user.bat<br></code></pre></td></tr></table></figure><p>Bash<br>Copy</p><h1 id="四、开始作画和调试"><a href="#四、开始作画和调试" class="headerlink" title="四、开始作画和调试"></a>四、开始作画和调试</h1><h2 id="1-在浏览器，（比如谷歌浏览器），打开http-127-0-0-1-7860（注意，不要关闭miniconda的黑色窗口）"><a href="#1-在浏览器，（比如谷歌浏览器），打开http-127-0-0-1-7860（注意，不要关闭miniconda的黑色窗口）" class="headerlink" title="1.在浏览器，（比如谷歌浏览器），打开http://127.0.0.1:7860（注意，不要关闭miniconda的黑色窗口）"></a>1.在浏览器，（比如谷歌浏览器），打开<a href="http://127.0.0.1:7860（注意，不要关闭miniconda的黑色窗口）">http://127.0.0.1:7860（注意，不要关闭miniconda的黑色窗口）</a></h2><p><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909892702-007575dd-39e9-4df3-8fa8-82c7c4455fab.webp#averageHue=%23fdfcfc&clientId=ue216eeb4-8a2a-4&from=paste&id=u39a64ffa&originHeight=937&originWidth=1920&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u2fd504af-945e-486a-91c4-419aec37c01&title="></p><h2 id="2-在prompt区域输入相关指令，比如beautiful-landscape，然后点击右边的generate，即可生成第一张图片啦。"><a href="#2-在prompt区域输入相关指令，比如beautiful-landscape，然后点击右边的generate，即可生成第一张图片啦。" class="headerlink" title="2.在prompt区域输入相关指令，比如beautiful landscape，然后点击右边的generate，即可生成第一张图片啦。"></a>2.在prompt区域输入相关指令，比如beautiful landscape，然后点击右边的generate，即可生成第一张图片啦。</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909893105-e08788fe-11b6-400c-bf10-921d8c585d79.webp#averageHue=%23fdfdfd&clientId=ue216eeb4-8a2a-4&from=paste&id=ucfc16e4f&originHeight=392&originWidth=1894&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u8b863ff3-04ad-4654-baa6-36430fdda41&title="></p><h2 id="3-生成的状态和操作"><a href="#3-生成的状态和操作" class="headerlink" title="3.生成的状态和操作"></a>3.生成的状态和操作</h2><p>网页会显示进度条，miniconda的黑色小窗也会显示进度条。<br>等进度条跑满，就能看到你生成的图啦。<br>如果不想生成了，可以点击interrupt停止生成，就会返回你目前为止已经生成的图片。（比如你要生成10张，已经生成了3张，点击interrupt，就会返回3张图片）<br>如果点击skip，就会跳过本张图片的生成，比如你想生成10张图，现在生成第3张，点击skip，第三张就不生成了，直接开始生成第四张，最后返回9张图片。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909893304-23387565-036f-4767-916b-8c932a4758c4.webp#averageHue=%238d8b8b&clientId=ue216eeb4-8a2a-4&from=paste&id=u087204c5&originHeight=216&originWidth=926&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u108dc799-9bf4-44c9-a6cc-5103d8d06f5&title="></p><h2 id="4-修改batch-count数值，一次性生成多张图片"><a href="#4-修改batch-count数值，一次性生成多张图片" class="headerlink" title="4.修改batch count数值，一次性生成多张图片"></a>4.修改batch count数值，一次性生成多张图片</h2><p>默认是1，一次性生成1张。<br>建议一次性生成4张或者以上，这样获得满意的图片概率会大一些，可以最多一次性生成最多100张。<br><img src="https://cdn.nlark.com/yuque/0/2023/webp/209761/1688909893312-3579df65-64d2-44d6-9c07-f21591e6f5ce.webp#averageHue=%23f7f6f3&clientId=ue216eeb4-8a2a-4&from=paste&id=ud06bd0eb&originHeight=136&originWidth=823&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=uc77d3c49-547b-485c-ad4e-6a716ee05b9&title="><br>但写得越大，一次性生成花费的时间越长，假设一张图30秒，设置10张就是300s，5分钟，100张则是3000s，50分钟。</p><h2 id="5-好了，那现在就本地化部署完毕了，可以开始愉快地玩耍啦，祝你玩得开心"><a href="#5-好了，那现在就本地化部署完毕了，可以开始愉快地玩耍啦，祝你玩得开心" class="headerlink" title="5.好了，那现在就本地化部署完毕了，可以开始愉快地玩耍啦，祝你玩得开心~"></a>5.好了，那现在就本地化部署完毕了，可以开始愉快地玩耍啦，祝你玩得开心~</h2><h1 id="五、安装过程中的错误处理"><a href="#五、安装过程中的错误处理" class="headerlink" title="五、安装过程中的错误处理"></a>五、安装过程中的错误处理</h1><h2 id="1、新版SD-WebUI卡安装Open-Clip解决方法"><a href="#1、新版SD-WebUI卡安装Open-Clip解决方法" class="headerlink" title="1、新版SD WebUI卡安装Open_Clip解决方法"></a>1、新版SD WebUI卡安装Open_Clip解决方法</h2><p><a href="https://www.bilibili.com/read/cv21253533">https://www.bilibili.com/read/cv21253533</a></p><h2 id="2、Stable-Diffusion-V2-Stability-AI处理"><a href="#2、Stable-Diffusion-V2-Stability-AI处理" class="headerlink" title="2、Stable Diffusion V2-Stability-AI处理"></a>2、Stable Diffusion V2-Stability-AI处理</h2><p><a href="https://gitee.com/jerrylinkun/stable-diffusion-v2-stability-ai?_from=gitee_search">https://gitee.com/jerrylinkun/stable-diffusion-v2-stability-ai?_from=gitee_search</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>stable diffusion本地部署</title>
    <link href="/2023/07/23/stable%20diffusion%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/"/>
    <url>/2023/07/23/stable%20diffusion%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="stable-diffusion是什么？"><a href="#stable-diffusion是什么？" class="headerlink" title="stable diffusion是什么？"></a>stable diffusion是什么？</h2><p><strong>Stable Diffusion</strong>是2022年发布的<a href="https://zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E5%AD%B8%E7%BF%92">深度学习</a><a href="https://zh.wikipedia.org/wiki/%E6%96%87%E6%9C%AC%E5%88%B0%E5%9B%BE%E5%83%8F%E7%94%9F%E6%88%90%E6%A8%A1%E5%9E%8B">文本到图像生成模型</a>。它主要用于根据文本的描述产生详细图像，同时它也可以应用于其他任务，如<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE%E5%83%8F%E4%BF%AE%E5%A4%8D">内补绘制</a>、外补绘制，以及在<a href="https://zh.wikipedia.org/wiki/%E6%8F%90%E7%A4%BA%E5%B7%A5%E7%A8%8B#%E6%96%87%E6%9C%AC%E6%8F%90%E7%A4%BA">提示词</a>指导下产生图生图的翻译。</p><h2 id="开发公司"><a href="#开发公司" class="headerlink" title="开发公司"></a>开发公司</h2><p>由<a href="https://zh.wikipedia.org/wiki/%E5%88%9D%E5%88%9B%E5%85%AC%E5%8F%B8">初创公司</a>StabilityAI、CompVis与Runway合作开发，并得到EleutherAI和<a href="https://zh.wikipedia.org/w/index.php?title=LAION&action=edit&redlink=1">LAION</a>（<a href="https://en.wikipedia.org/wiki/LAION">英语</a>）的支持。</p><h2 id="开源地址"><a href="#开源地址" class="headerlink" title="开源地址"></a>开源地址</h2><p><a href="https://github.com/CompVis/stable-diffusion">https://github.com/CompVis/stable-diffusion</a></p><h2 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h2><p><a href="https://www.yuque.com/wayss000/tcsw/kt08se509w6wnlil?view=doc_embed">stable diffusion本地部署</a><br><a href="https://www.yuque.com/wayss000/tcsw/se013m32bcwmis5t?view=doc_embed">stable diffusion在线部署</a></p><h2 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h2><p><a href="https://developer.aliyun.com/article/1215455">Stable Diffusion原理详解-阿里云开发者社区</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/07/23/hello-world/"/>
    <url>/2023/07/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
